/*
뒤쪽 0의 갯수 구하기

N!의 정의는 다음과 같습니다.

N! = 1 * 2 * 3 * 4 ... N
이때 N!를 정수로 변환 해 뒤에서 부터 연속되는 0의 갯수를 구하세요.

예) f(12) -> 2 # 12!은 479001600 f(25) -> 6 # 25!은 15511210043330985984000000

출처: codewars
*/

// 가장 뒤쪽에 0이 있으려면 2 * 5 의 개수를 세면 된다.
// 2와 5중 적은 것은 항상 5이므로 팩토리얼 에서 소인수 5가 몇제곱인지만 찾으면 된다.
// 5 10 15 20 25 30 35 40 45 50 ... 125 130 ... 에 소인수 5는
// 1  1  1  1  2  1  1  1  1  2       3   1     개씩 있게 된다.
// 즉 5의 배수들을 대상으로 5로 나누어 떨어질 떄까지의 횟수들을 누적하면 된다.

var f = function(n) {
    return n < 5 ? 0 : Math.floor(n / 5) + f(n / 5);
}

var f = function(n) {
    var zeros = 0
    while (n >= 5) {
        n = Math.floor(n / 5);
        zeros += n;
    }
    return zeros;
}

console.log(f(12));
console.log(f(25));
